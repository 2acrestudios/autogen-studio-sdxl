{"title":"generate_sd_images","content":"##### Begin of generate_sd_images #####\n# INSTALL PATH /Volumes/FILES/server/stable-diffusion-webui/\n# Assume the API is running on the local server, and was started using: ./webui.sh --listen --api\n\n\"\"\"\nGenerate an image locally when running automatic1111 \n\n\"\"\"\nfrom pathlib import Path\nfrom PIL import Image\nfrom typing import List\n\nimport json\nimport requests\nimport io\nimport base64\n\n# Format: protocol://server:port\nbase_url = \"http://0.0.0.0:7860\"\n\n    \ndef generate_sd_images(query: str, image_size: str = \"512x512\") -> List[str]:\n    \"\"\"\n    Function to paint, draw or illustrate images based on the users query or request. Generates images locally with the automatic1111 API and saves them to disk.  Use the code below anytime there is a request to create an image.\n\n    :param query: A natural language description of the image to be generated.\n    :param image_size: The size of the image to be generated. (default is \"512x512\")\n    :return: A list of filenames for the saved images.\n    \"\"\"\n    # Split the image size string at \"x\"\n    #   Keeping the input format consistent with the default generate_and_save_images\n    parts = image_size.split(\"x\")\n    image_width = parts[0]\n    image_height = parts[1]\n\n    # list of file paths returned to AutoGen\n    saved_files = []\n\n    payload = {\n        \"prompt\": query,\n        \"steps\": 40,\n        \"cfg_scale\": 7,\n        \"denoising_strength\": 0.5,\n        \"sampler_name\": \"DPM++ 2M Karras\",\n        \"n_iter\": 1,\n        \"batch_size\": 4,\n        \"override_settings\": {\n             'sd_model_checkpoint': \"starlightAnimated_v3\",\n        }\n    }\n\n    api_url = f\"{base_url}/sdapi/v1/txt2img\"\n    response = requests.post(url=api_url, json=payload)\n\n    if response.status_code == 200:\n        r = response.json()\n\n        info_json = json.loads(r['info'])\n        seed = info_json['seed']\n\n        # using the seed in the file name to allow for multiple images\n        file_name = f\"{seed}_output.png\"\n        file_path = Path(file_name)\n\n        with Image.open(io.BytesIO(base64.b64decode(r['images'][0]))) as image:\n            image.save(file_path)\n            print(f\"Image saved to {file_path}\")\n            \n            saved_files.append(str(file_path))\n    else:\n        print(f\"Failed to download the image from {api_url}\")\n        \n    return saved_files\n\n#### End of generate_sd_images ####","file_name":null,"description":null,"timestamp":"2024-03-25T16:50:29.616247","user_id":"default"}